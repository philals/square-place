import type { NextPage } from "next";
import Head from "next/head";
import { trpc } from "../utils/trpc";
import { GridRender } from "../components/GridRender/GridRender";
import { GridEditor } from "../components/GridEditor";
import { LoadingSpinner } from "../components/LoadingSpinner/LoadingSpinner";

const Home: NextPage = () => {
  const hello = trpc.proxy.example.hello.useQuery({ text: "from tRPC" });
  const grids = trpc.proxy.grid.getAll.useQuery();
  // const mutation = trpc.proxy.grid.makeManyGrids.useMutation();
  // const deleteAll = trpc.proxy.grid.deleteAll.useMutation();

  if (grids.isLoading) {
    return <LoadingSpinner numberOfSquares={9} />;
  }

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="container flex flex-col items-center justify-center min-h-screen p-4 mx-auto">
        <GridRender grids={grids.data?.grids || []} />
        {/* <button onClick={() => mutation.mutate()}>Mutation</button>
        <button onClick={() => deleteAll.mutate()}>Clear All</button> */}
        <div className="flex items-center justify-center w-full pt-6 text-2xl text-blue-500">
          {hello.data ? <p>{hello.data.greeting}</p> : <p>Loading..</p>}
        </div>
        <h2>Edit this grid</h2>
        <GridEditor />
      </main>
    </>
  );
};

export default Home;
